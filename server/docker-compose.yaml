version: "3.9"

services:
  db:
    image: mysql:latest
    container_name: hse_db
    env_file:
      - .env
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p ${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - ./mysql:/var/lib/mysql

  server:
    build: .
    container_name: hse_server
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: sh -c '[ -f .test_lock ] && { echo "Lock file exists"; } || { poetry run pytest -v; } && poetry run uvicorn hseserver.app.main:app --host 0.0.0.0 --port 8000'
    restart: unless-stopped
    volumes:
      - ./files:/app/uploaded_files
    expose:
      - "8000"

  nginx:
    image: nginx:alpine
    container_name: hse_nginx
    depends_on:
      - server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/certs:/etc/letsencrypt
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: hse_certbot
    depends_on:
      - nginx
    env_file:
      - .env
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/certs:/etc/letsencrypt
    entrypoint: sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot --email ${EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}"

networks:
  default:
    name: hse_network